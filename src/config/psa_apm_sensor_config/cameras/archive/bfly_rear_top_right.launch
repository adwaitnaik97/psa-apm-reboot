<launch>
  <arg name="camera_id" default="$(env AIOS_BFLY_REAR_TOP_RIGHT_ID)"/>
  <arg name="frame_id" default="$(env AIOS_BFLY_REAR_TOP_RIGHT_FRAME_ID)" />
  <arg name="camera_serial" default="$(env AIOS_BFLY_REAR_TOP_RIGHT_SN)" />
  <arg name="calibrated" default="1" />
  <arg name="calib_path" default="$(env AIOS_BFLY_REAR_TOP_RIGHT_CALIB_PATH)" />

  <!-- if set, don't launch the driver nodelet -->
  <arg name="simulation" default="false" />

  <group ns="$(arg camera_id)" unless="$(arg simulation)">

  <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager"  respawn="true"/>

  <node pkg="nodelet" type="nodelet" name="camera_nodelet"
      args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager"  respawn="true">

    <param name="frame_id" value="$(arg frame_id)" />

    <param name="format7_color_coding" value="rgb8" />
    <param name="frame_rate" value="5" />
    <param name="video_mode" value="format7_mode0" />
    <param name="packet_delay" value="1500" />
    <param name="serial" value="$(arg camera_serial)" />

    <!-- Use the camera_calibration package to create this file -->
    <param name="camera_info_url" if="$(arg calibrated)"
     value="file://$(arg calib_path)" />
  </node>
  </group>

  <!-- decompress images (from bag file) -->
  <node name="republish_rtr" type="republish" pkg="image_transport" output="screen"
    args="compressed in:=/$(arg camera_id)/image_raw raw out:=/$(arg camera_id)/image_raw"
      if="$(arg simulation)"/>

  <!-- construct rectified images from image_raw -->
  <node name="image_proc" pkg="image_proc" type="image_proc" ns="$(arg camera_id)"/>

  <group ns="$(arg camera_id)/image_raw" >
    <rosparam param="disable_pub_plugins">
      - 'image_transport/compressedDepth'
      - 'image_transport/theora'
    </rosparam>
  </group>

  <rosparam ns="$(arg camera_id)/image_raw/compressed" param="jpeg_quality" >
    92
  </rosparam>

</launch>
